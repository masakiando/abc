{:rename-macros {}, :renames {}, :externs {THREE {WebGLRenderer {prototype {setSize {}, domElement {}, render {}}}}, THREEx {ArToolkitSource {prototype {onResizeElement {}, copyElementSizeTo {}, ready {}, domElement {}, init {}}}, ArToolkitContext {prototype {arController {canvas {}}, update {}}}}, requestAnimationFrame {}, window {}}, :use-macros {}, :excludes #{}, :name ar-sample.app, :imports nil, :requires {goog.dom goog.dom, ar-sample.renderer ar-sample.renderer, dom goog.dom, ar-sample.context ar-sample.context, ar-sample.app-state ar-sample.app-state, ar-sample.source ar-sample.source, events goog.events, ar-sample.scene ar-sample.scene, goog.events goog.events, ar-sample.camera ar-sample.camera, ig integrant.core, integrant.core integrant.core}, :cljs.spec/speced-vars [], :uses nil, :defs {setup-renderer {:protocol-inline nil, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/app.cljs", :line 14, :column 8, :end-line 14, :end-column 22, :private true, :arglists (quote ([renderer]))}, :private true, :name ar-sample.app/setup-renderer, :variadic false, :file "src/ar_sample/app.cljs", :end-column 22, :method-params ([renderer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([renderer]))}, resize {:protocol-inline nil, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/app.cljs", :line 19, :column 8, :end-line 19, :end-column 14, :private true, :arglists (quote ([app]))}, :private true, :name ar-sample.app/resize, :variadic false, :file "src/ar_sample/app.cljs", :end-column 14, :method-params ([app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app]))}, start {:protocol-inline nil, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/app.cljs", :line 28, :column 7, :end-line 28, :end-column 12, :arglists (quote ([app]))}, :name ar-sample.app/start, :variadic false, :file "src/ar_sample/app.cljs", :end-column 12, :method-params ([app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:app/running? :source :renderer :app-state :app :camera :context :scene}, :order [:source :context :renderer :app/running? :app-state :scene :camera :app]}, :doc nil}