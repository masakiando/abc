{:rename-macros {}, :renames {}, :externs {THREE {FontLoader {prototype {load {}}}}, window {}}, :use-macros {}, :excludes #{}, :name ar-sample.core, :imports nil, :requires {ar-sample.app ar-sample.app, events goog.events, goog.events goog.events, ig integrant.core, integrant.core integrant.core}, :cljs.spec/speced-vars [], :uses nil, :defs {HELVETIKER_FONT_PATH {:name ar-sample.core/HELVETIKER_FONT_PATH, :file "src/ar_sample/core.cljs", :line 10, :column 1, :end-line 10, :end-column 36, :private true, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/core.cljs", :line 10, :column 16, :end-line 10, :end-column 36, :private true}, :tag string}, +config+ {:name ar-sample.core/+config+, :file "src/ar_sample/core.cljs", :line 13, :column 1, :end-line 13, :end-column 14, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/core.cljs", :line 13, :column 6, :end-line 13, :end-column 14}, :tag cljs.core/IMap}, system {:name ar-sample.core/system, :file "src/ar_sample/core.cljs", :line 42, :column 1, :end-line 42, :end-column 16, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/core.cljs", :line 42, :column 10, :end-line 42, :end-column 16}, :tag any}, start {:protocol-inline nil, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/core.cljs", :line 44, :column 7, :end-line 44, :end-column 12, :arglists (quote ([fonts]))}, :name ar-sample.core/start, :variadic false, :file "src/ar_sample/core.cljs", :end-column 12, :method-params ([fonts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fonts]))}, stop {:protocol-inline nil, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/core.cljs", :line 48, :column 7, :end-line 48, :end-column 11, :arglists (quote ([system]))}, :name ar-sample.core/stop, :variadic false, :file "src/ar_sample/core.cljs", :end-column 11, :method-params ([system]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([system]))}, init {:protocol-inline nil, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/core.cljs", :line 51, :column 7, :end-line 51, :end-column 11, :arglists (quote ([]))}, :name ar-sample.core/init, :variadic false, :file "src/ar_sample/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/masakiando/projects2018/AR-sample/src/ar_sample/core.cljs", :line 58, :column 7, :end-line 58, :end-column 19, :arglists (quote ([]))}, :name ar-sample.core/on-js-reload, :variadic false, :file "src/ar_sample/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:marker :source :renderer :app-state :mesh :app :camera :context :clock :light :helvetiker :fonts :scene}, :order [:marker :source :renderer :app-state :mesh :app :camera :context :clock :light :fonts :scene :helvetiker]}, :doc nil}